#! /usr/bin/env python

import imp

module, path, description = imp.find_module("SimulatorTest", ["..", "../..", "../../.."])
mod = imp.load_module("SimulatorTest", module, path, description)

class PredicateTest(mod.SimulatorTest):

    # Helper function to execute the instruction and get the resultant predicate
    # value automatically.
    def predTest(self, instruction, expected, description):
        self.execute(0, instruction)
        pred = self.predicate(0)
        self.assertEqual(pred, expected, description)

    def runTest(self):
        self.predTest("seteqi.p r0, r0, 1",   0, "(0 == 1) = 0")
        self.predTest("seteqi.p r0, r0, 0",   1, "(0 == 0) = 1")
        
        self.predTest("setnei.p r0, r0, 1",   1, "(0 != 1) = 1")
        self.predTest("setnei.p r0, r0, 0",   0, "(0 != 0) = 0")

        self.predTest("setlti.p r0, r0, 5",   1, "(0 <  5) = 1")
        self.predTest("setlti.p r0, r0, -5",  0, "(0 < -5) = 0")
        self.predTest("setlti.p r0, r0, 0",   0, "(0 <  0) = 0")

        self.predTest("setltui.p r0, r0, 5",  1, "(0 <  5) = 1")
        self.predTest("setltui.p r0, r0, -5", 1, "(0 <  huge number) = 1")
        self.predTest("setltui.p r0, r0, 0",  0, "(0 <  0) = 0")

        # Note: this won't work when we move to a 32-bit encoding: we can't fit
        # 2 billion in the immediate.
        self.predTest("addui.p r3, r0, 2000000000", 0, "max signed int = 2.1 billion => no overflow")
        self.predTest("subu.p r0, r0, r3", 1, "carry should be set because 0 - 2e9 < 0")
        self.predTest("subu.p r0, r3, r0", 0, "carry shouldn't be set because 2e9 - 0 >= 0")
        self.predTest("subu.p r0, r0, r0", 0, "carry shouldn't be set because 0 - 0 >= 0")
        self.predTest("rsubi.p r0, r0, 5", 0, "carry shouldn't be set because 5 - 0 >= 0")
        self.predTest("rsubi.p r0, r3, 5", 1, "carry should be set because 5 - 2e9 < 0")
        self.predTest("rsubi.p r0, r0, 0", 0, "carry shouldn't be set because 0 - 0 >= 0")
        self.predTest("addu.p r3, r3, r3", 1, "carry should be set because 2e9 + 2e9 > 2.1e9")
            
if __name__ == '__main__':
    PredicateTest().runAllTests()
