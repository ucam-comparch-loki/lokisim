fetchr          36
addui           r9,  r0,  28            ; store 7, since it is a common offset
addui           r11, r0,  r0            ; set the initial offset to 0
addui           r10, ch1, 0             ; wait until we receive an address, and store it
ldw.eop         r10,      0   > 1       ; load the first value early

fetchr          16                      ; MOVING UPWARDS
addu            r12, r10, r11           ; ============================
ldw             r12,      0   > 1       ;  Load and forward data item
addui.eop       r0,  ch0, 0   > 2       ; ============================

setlti.p        r0,  r11, 32            ; see if we have hit the top of the grid
!p?fetchr       20
p?addui         r11, r11, 4
p?fetchr        64                      ; switch to moving down
addu.eop        r0,  r0,  r0

seteqi.p        r0,  r11, 252           ; see if we have finished
!p?fetchr       16                      ; check the final condition
p?fetchr        108                     ; end
addu.eop        r0,  r0,  r0

and             r13, r11, r9
seteq.p         r0,  r13, r9            ; see if we have hit the right of the grid
!p?subu         r11, r11, r9
!p?fetchr       -52                     ; keep moving up
p?addui         r11, r11, 32
p?fetchr        28                      ; switch to moving down
addu.eop        r0,  r0,  r0

fetchr          16                      ; MOVING DOWNWARDS
addu            r12, r10, r11           ; ============================
ldw             r12,      0   > 1       ;  Load and forward data item
addui.eop       r0,  ch0, 0   > 2       ; ============================

setlti.p        r0,  r11, 224           ; see if we have reached the bottom of the grid
p?fetchr        20                      ; we haven't, so check the other condition
!p?addui        r11, r11, 4
!p?fetchr       -96                     ; we have, so switch to moving up
addu.eop        r0,  r0,  r0

and             r13, r11, r9
seteq.p         r0,  r13, r0            ; see if we have reached the left of the grid
!p?addu         r11, r11, r9
!p?fetchr       -36                     ; keep moving down
p?addui         r11, r11, 32
p?fetchr        -116                    ; switch to moving up
addu.eop        r0,  r0,  r0

addui           r0,  ch0, 0   > 2       ; send the final value late
syscall.eop     1
