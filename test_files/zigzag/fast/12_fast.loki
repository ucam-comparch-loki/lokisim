addui       r0 r0 96 > 2   ; connect to the data memory (and have it send to cluster 1)
addui       r10 ch1 0       ; wait until we receive an address, and store it
fetch.eop   r1 12            ; do the fetch late so it only does it when necessary


fetch       r1 132
ld          r10 0 > 3
ld          r10 4 > 3
ld          r10 32 > 3
ld          r10 64 > 3
ld          r10 36 > 3
ld          r10 8 > 3
ld          r10 12 > 3
ld          r10 40 > 3
ld          r10 68 > 3
ld          r10 96 > 3
ld          r10 128 > 3
ld          r10 100 > 3
ld          r10 72 > 3
ld          r10 44 > 3
ld          r10 16 > 3
ld          r10 20 > 3
ld          r10 48 > 3
ld          r10 76 > 3
ld          r10 104 > 3
ld          r10 132 > 3
ld          r10 160 > 3
ld          r10 192 > 3
ld          r10 164 > 3
ld          r10 136 > 3
ld          r10 108 > 3
ld          r10 80 > 3
ld          r10 52 > 3
ld          r10 24 > 3
ld          r10 28 > 3
ld          r10 56 > 3
ld          r10 84 > 3
ld.eop      r10 112 > 3     ; split the loads in half so they don't overwrite each other


fetch       r1 -144            ; restart
ld          r10 140 > 3
ld          r10 168 > 3
ld          r10 196 > 3
ld          r10 224 > 3
ld          r10 228 > 3
ld          r10 200 > 3
ld          r10 172 > 3
ld          r10 144 > 3
ld          r10 116 > 3
ld          r10 88 > 3
ld          r10 60 > 3
ld          r10 92 > 3
ld          r10 120 > 3
ld          r10 148 > 3
ld          r10 176 > 3
ld          r10 204 > 3
ld          r10 232 > 3
ld          r10 236 > 3
ld          r10 208 > 3
ld          r10 180 > 3
ld          r10 152 > 3
ld          r10 124 > 3
ld          r10 156 > 3
ld          r10 184 > 3
ld          r10 212 > 3
ld          r10 240 > 3
ld          r10 244 > 3
ld          r10 216 > 3
ld          r10 188 > 3
ld          r10 220 > 3
ld          r10 248 > 3
ld.eop      r10 252 > 3
