#! /usr/bin/env python

import os, subprocess, tempfile

# Update the loader so it points to a particular directory.
def updateMetaLoader(directory):
    metaloader = open("test_files/loader.txt", 'w')
    metaloader.write("% Loader automatically generated by test script\n")
    metaloader.write("directory " + directory + "\n")
    metaloader.write("loader    loader.txt")
    
# Print the contents of a file.
def printFile(filename, indent=""):
    for line in filename:
        print indent + line,

# Run a single test in the specified directory.
def runTest(directory):
    errlog = tempfile.TemporaryFile()

    command = "Debug/Loki2 > ../logfile.txt"
    updateMetaLoader(directory)
    
    print "Testing " + directory + "... ",
    
    process = subprocess.Popen(command, shell=True, stderr=errlog)
    process.wait()
    p = process.returncode

    if p == 0:  # Execution finished successfully, so now test the output.
        diffFile = tempfile.NamedTemporaryFile()
        regexpFile = open("test_files/"+directory+"/.regexp")
        regexp = regexpFile.readline().strip()
        
        # diff then grep: would prefer grep then diff so diff receives smaller files
        command = "diff test_files/" + directory + "/.expected ../logfile.txt | grep \"" + regexp + "\" > " + diffFile.name
        process2 = subprocess.Popen(command, shell=True)
        process2.wait()
        diffFile.flush()
        if process2.returncode != 0:
            print 'passed'
        else:
            print 'failed'
            printFile(diffFile, "  ")
        diffFile.close()
        
    else:       # Simulation threw an exception: print the error report.
        print 'failed'
        printFile(errlog, "  ")
        
    errlog.close()
        
# Execution starts here
directory = "/local/scratch/db434/workspace/Loki2"
os.chdir(directory)

# Traverse the tree depth-first. (Does breadth-first at the moment.)
# root = current directory, dirs = subdirectories, files = files in this directory
for root, dirs, files in os.walk(directory + "/test_files"):
    if ".svn" in dirs:  # Not interested in svn files/folders
        dirs.remove(".svn")
    for test in dirs:
        testdir = root + "/" + test
        contents = os.listdir(testdir)
        # Run the test only if all of the required information is there.
        if "loader.txt" in contents and ".regexp" in contents and ".expected" in contents:
            subdir = testdir.replace(directory+"/test_files/", "")
            runTest(subdir)
